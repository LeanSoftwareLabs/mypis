[main]
user = com.leansoftwarelabs.ext.shiro.FacesAjaxAwareUserFilter
shiro.loginUrl = /faces/login.jsf
user.loginUrl = /faces/login.jsf
jdbcRealm=com.leansoftwarelabs.realm.shiro.SaltedMutiTenantJdbcRealm
jdbcRealm.permissionsLookupEnabled=true
jdbcRealm.authenticationQuery = select password, password_salt from users where username = ?
jdbcRealm.permissionsQuery = select concat(resource_value,':',case a.actions when '1111' then '*' when '0000' then 'none' when '1000' then 'create' when '1100' then 'create,read' when '1110' then 'create,read,update' when '0100' then 'read' when '0110' then 'read,update' when '0111' then 'read,update,delete' when '0010' then 'update' when '0011' then 'update,delete' when '1011' then 'create,update,delete' when '0001' then 'delete' when '1001' then 'create,delete' when '1101' then 'create,update,delete' else 'none'end) permmisions from(select resource_value, concat(read_, create_, update_, delete_) actions from roles_permissions p, resources r where p.resource_id = r.resource_id and p.role_name = ? and p.tenant_id = ?) a
ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.serverName = localhost
ds.user = mypis_admin
ds.password = mypis_admin
ds.databaseName = mypis
jdbcRealm.dataSource = $ds
credentialsMatcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
# base64 encoding, not hex in this example:
credentialsMatcher.storedCredentialsHexEncoded = false
credentialsMatcher.hashIterations = 1024
# This next property is only needed in Shiro 1.0.  Remove it in 1.1 and later:
credentialsMatcher.hashSalted = true
jdbcRealm.credentialsMatcher = $credentialsMatcher


[users]
pino = password1, admin
john = password1, associate

[roles]
admin = *
associate = baptismal-register-list
[urls]
# /faces/login.jsf = user
/faces/pages/** = user